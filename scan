#!/usr/bin/php
<?php

class PhpGalScannerClass
{
    public $headers = array();
    public $links = array();

    public function http_parse_headers($text)
    {
        $headers=array();
        $lines=explode("\n",$text);
        $headers['status_line']=array_shift($lines);
        $split=explode(' ',$headers['status_line'],3);
        $headers['status_protocol']=$split[0];
        $headers['status_code']=$split[1];
        $headers['status_message']=$split[2];
        foreach ($lines as $line)
        {
            $split=explode(': ',$line,2);
            if (!empty($split[1]))
                $headers[$split[0]]=$split[1];
        }
        return($headers);
    }
    public function http_parse_links($linklist)
    {
        $links=array();
        preg_match_all('|\<([^ ]*)\>;[ ]*rel=\"([^ ]*)\"|',$linklist,$matches,PREG_SET_ORDER);
        foreach ($matches as $match)
            if (!empty($match[1]) && !empty($match[2]))
                $links[$match[2]]=$match[1];
        return($links);
    }
    public function curl_get_json($url)
    {
        $ch=curl_init();
        curl_setopt($ch,CURLOPT_URL,$url);
        curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);
        curl_setopt($ch,CURLOPT_USERAGENT,"stgnet/phpgal");
        curl_setopt($ch,CURLOPT_HEADER,1);
        $response=curl_exec($ch) or die('CURL ERROR: '.curl_error($ch));
        $info=curl_getinfo($ch);
        curl_close($ch);
        $header=substr($response,0,$info['header_size']);
        $this->headers=$this->http_parse_headers($header);
        if (!empty($this->headers['Link']))
            $this->links=$this->http_parse_links($this->headers['Link']);
        else
            $this->links=array();
        $body=substr($response,-$info['download_content_length']);
        $json=json_decode($body);
        return($json);
    }
    public function ScanThisProject($full_name)
    {
        $url='https://api.github.com/repos/'.$full_name.'/contents/composer.json';
        $results=$this->curl_get_json($url);
        $decode_func=$results->encoding.'_decode';
        $file=$decode_func($results->content);
        print_r($results);
        echo $file;
        exit(0);
    }
    public function SearchForProject($name='')
    {
        if ($name)
            $name='+'.urlencode($name);
        $url='https://api.github.com/search/repositories?q=language:php'.$name.'&sort=stars';
        while (1)
        {
            $results=$this->curl_get_json($url);
            if (empty($results->items))
                break;

            foreach ((array)$results->items as $item)
            {
                if (empty($item->full_name))
                    die('Unexpected - item has no full_name: '.print_r($item,true));

                $cache_file='cache/'.$item->full_name.'.json';
                if (!is_dir(dirname($cache_file)))
                    mkdir(dirname($cache_file),0740,true);
                file_put_contents($cache_file,json_encode($item));

                echo $item->full_name.' => '.$item->description."\n";
                $this->ScanThisProject($item->full_name);
            }
            if (empty($this->link['next']))
                break;
            $url=$this->link['next'];
            break;
        }
    }
}

$scanner=new PhpGalScannerClass();

$scanner->SearchForProject('Faker');
